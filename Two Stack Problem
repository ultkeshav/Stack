
#include <iostream>
#include <stack>

using namespace std;

class TwoStack{
    
    public:
    int *arr;
    int size;
    int top1;
    int top2;
    
    TwoStack(int size){
    
    this->size = size;
    arr = new int[size];
    top1 = -1;
    top2 = size;
    }
    
    void push1(int num){
        
        if(top2 - top1 > 1){
            
            top1++;
            arr[top1 ] = num;
            
        }
        else{
            
            cout<<"Stack Overflow"<<endl;
           
        }
        
    }
    
       void push2(int num){
        
        if(top2 - top1 > 1){
            
            top2--;
            arr[top2] = num;
            
        }
        else{
            
            cout<<"Stack Overflow"<<endl;
           
        }
        
    }
    int pop1(){
        
        if(top1>=0){
            
            int ans = arr[top1];
            top1--;
            return ans;
        }
        
        else{
            
            return -1;
            
        }
    
    }
    
     int pop2(){
        
        if(top2 < size){
            int ans = arr[top2];
            top2++;
            return ans;
        }
        
        else{
            cout<<"Stack Underflow"<<endl;
            
        }
    
    }
    
    int peek1(){
        
        if(top1 >= 0){
            
            return arr[top1];
        }
        else{
            
            return -1;
        }
    }
    
    int peek2(){
        
        if(top2 < size){
            
            return arr[top2];
        }
        else{
            
            return -1;
        }
    }
     

    
    
};

int main()
{
    TwoStack st(5);
    
    st.push1(10);
    st.push1(5);
    st.push1(3);
    st.push2(4);
    st.push2(15);
    
    
    
    st.pop1();
    st.pop2();
    
    cout<<"Top element of the stack is "<<st.peek1()<<endl;


    
    return 0;
}
